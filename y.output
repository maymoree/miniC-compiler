Grammar

    0 $accept: program $end

    1 program: print_line read_line func

    2 print_line: EXTERN VOID PRINT '(' INT ')' ';'

    3 read_line: EXTERN INT READ '(' ')' ';'

    4 func: INT NAME '(' INT NAME ')' code_block
    5     | VOID NAME '(' INT NAME ')' code_block
    6     | INT NAME '(' ')' code_block
    7     | VOID NAME '(' ')' code_block

    8 code_block: '{' var_decls stmts '}'
    9           | '{' stmts '}'

   10 stmts: stmts stmt
   11      | stmt

   12 stmt: assign_stmt
   13     | call_func_stmt
   14     | return_stmt
   15     | condition_block
   16     | while_block
   17     | code_block

   18 condition_block: if_condition stmt
   19                | if_condition stmt else_condition

   20 if_condition: IF '(' bool_condition ')'

   21 else_condition: ELSE stmt

   22 while_block: WHILE '(' bool_condition ')' stmt

   23 bool_condition: term '<' term
   24               | term '>' term
   25               | term LE term
   26               | term GE term
   27               | term EQ term
   28               | term NEQ term

   29 assign_stmt: NAME '=' expr ';'
   30            | NAME '=' call_func_stmt

   31 expr: term '+' term
   32     | term '-' term
   33     | term '*' term
   34     | term '/' term
   35     | term

   36 term: NUM
   37     | NAME
   38     | '-' term

   39 var_decls: var_decls decl
   40          | decl

   41 decl: INT NAME ';'

   42 call_func_stmt: PRINT '(' NAME ')' ';'
   43               | READ '(' ')' ';'

   44 return_stmt: RETURN '(' expr ')' ';'
   45            | RETURN expr ';'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 3 4 5 6 7 20 22 42 43 44
    ')' (41) 2 3 4 5 6 7 20 22 42 43 44
    '*' (42) 33
    '+' (43) 31
    '-' (45) 32 38
    '/' (47) 34
    ';' (59) 2 3 29 41 42 43 44 45
    '<' (60) 23
    '=' (61) 29 30
    '>' (62) 24
    '{' (123) 8 9
    '}' (125) 8 9
    error (256)
    NUM <ival> (258) 36
    NAME <idname> (259) 4 5 6 7 29 30 37 41 42
    PRINT (260) 2 42
    READ (261) 3 43
    RETURN (262) 44 45
    IF (263) 20
    ELSE (264) 21
    WHILE (265) 22
    INT (266) 2 3 4 5 6 41
    VOID (267) 2 5 7
    EXTERN (268) 2 3
    LE (269) 25
    GE (270) 26
    EQ (271) 27
    NEQ (272) 28
    LOWER_THAN_ELSE (273)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program <nptr> (32)
        on left: 1
        on right: 0
    print_line <nptr> (33)
        on left: 2
        on right: 1
    read_line <nptr> (34)
        on left: 3
        on right: 1
    func <nptr> (35)
        on left: 4 5 6 7
        on right: 1
    code_block <nptr> (36)
        on left: 8 9
        on right: 4 5 6 7 17
    stmts <svec_ptr> (37)
        on left: 10 11
        on right: 8 9 10
    stmt <nptr> (38)
        on left: 12 13 14 15 16 17
        on right: 10 11 18 19 21 22
    condition_block <nptr> (39)
        on left: 18 19
        on right: 15
    if_condition <nptr> (40)
        on left: 20
        on right: 18 19
    else_condition <nptr> (41)
        on left: 21
        on right: 19
    while_block <nptr> (42)
        on left: 22
        on right: 16
    bool_condition <nptr> (43)
        on left: 23 24 25 26 27 28
        on right: 20 22
    assign_stmt <nptr> (44)
        on left: 29 30
        on right: 12
    expr <nptr> (45)
        on left: 31 32 33 34 35
        on right: 29 44 45
    term <nptr> (46)
        on left: 36 37 38
        on right: 23 24 25 26 27 28 31 32 33 34 35 38
    var_decls <svec_ptr> (47)
        on left: 39 40
        on right: 8 39
    decl <nptr> (48)
        on left: 41
        on right: 39 40
    call_func_stmt <nptr> (49)
        on left: 42 43
        on right: 13 30
    return_stmt <nptr> (50)
        on left: 44 45
        on right: 14


State 0

    0 $accept: . program $end

    EXTERN  shift, and go to state 1

    program     go to state 2
    print_line  go to state 3


State 1

    2 print_line: EXTERN . VOID PRINT '(' INT ')' ';'

    VOID  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: print_line . read_line func

    EXTERN  shift, and go to state 6

    read_line  go to state 7


State 4

    2 print_line: EXTERN VOID . PRINT '(' INT ')' ';'

    PRINT  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

    3 read_line: EXTERN . INT READ '(' ')' ';'

    INT  shift, and go to state 9


State 7

    1 program: print_line read_line . func

    INT   shift, and go to state 10
    VOID  shift, and go to state 11

    func  go to state 12


State 8

    2 print_line: EXTERN VOID PRINT . '(' INT ')' ';'

    '('  shift, and go to state 13


State 9

    3 read_line: EXTERN INT . READ '(' ')' ';'

    READ  shift, and go to state 14


State 10

    4 func: INT . NAME '(' INT NAME ')' code_block
    6     | INT . NAME '(' ')' code_block

    NAME  shift, and go to state 15


State 11

    5 func: VOID . NAME '(' INT NAME ')' code_block
    7     | VOID . NAME '(' ')' code_block

    NAME  shift, and go to state 16


State 12

    1 program: print_line read_line func .

    $default  reduce using rule 1 (program)


State 13

    2 print_line: EXTERN VOID PRINT '(' . INT ')' ';'

    INT  shift, and go to state 17


State 14

    3 read_line: EXTERN INT READ . '(' ')' ';'

    '('  shift, and go to state 18


State 15

    4 func: INT NAME . '(' INT NAME ')' code_block
    6     | INT NAME . '(' ')' code_block

    '('  shift, and go to state 19


State 16

    5 func: VOID NAME . '(' INT NAME ')' code_block
    7     | VOID NAME . '(' ')' code_block

    '('  shift, and go to state 20


State 17

    2 print_line: EXTERN VOID PRINT '(' INT . ')' ';'

    ')'  shift, and go to state 21


State 18

    3 read_line: EXTERN INT READ '(' . ')' ';'

    ')'  shift, and go to state 22


State 19

    4 func: INT NAME '(' . INT NAME ')' code_block
    6     | INT NAME '(' . ')' code_block

    INT  shift, and go to state 23
    ')'  shift, and go to state 24


State 20

    5 func: VOID NAME '(' . INT NAME ')' code_block
    7     | VOID NAME '(' . ')' code_block

    INT  shift, and go to state 25
    ')'  shift, and go to state 26


State 21

    2 print_line: EXTERN VOID PRINT '(' INT ')' . ';'

    ';'  shift, and go to state 27


State 22

    3 read_line: EXTERN INT READ '(' ')' . ';'

    ';'  shift, and go to state 28


State 23

    4 func: INT NAME '(' INT . NAME ')' code_block

    NAME  shift, and go to state 29


State 24

    6 func: INT NAME '(' ')' . code_block

    '{'  shift, and go to state 30

    code_block  go to state 31


State 25

    5 func: VOID NAME '(' INT . NAME ')' code_block

    NAME  shift, and go to state 32


State 26

    7 func: VOID NAME '(' ')' . code_block

    '{'  shift, and go to state 30

    code_block  go to state 33


State 27

    2 print_line: EXTERN VOID PRINT '(' INT ')' ';' .

    $default  reduce using rule 2 (print_line)


State 28

    3 read_line: EXTERN INT READ '(' ')' ';' .

    $default  reduce using rule 3 (read_line)


State 29

    4 func: INT NAME '(' INT NAME . ')' code_block

    ')'  shift, and go to state 34


State 30

    8 code_block: '{' . var_decls stmts '}'
    9           | '{' . stmts '}'

    NAME    shift, and go to state 35
    PRINT   shift, and go to state 36
    READ    shift, and go to state 37
    RETURN  shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    INT     shift, and go to state 41
    '{'     shift, and go to state 30

    code_block       go to state 42
    stmts            go to state 43
    stmt             go to state 44
    condition_block  go to state 45
    if_condition     go to state 46
    while_block      go to state 47
    assign_stmt      go to state 48
    var_decls        go to state 49
    decl             go to state 50
    call_func_stmt   go to state 51
    return_stmt      go to state 52


State 31

    6 func: INT NAME '(' ')' code_block .

    $default  reduce using rule 6 (func)


State 32

    5 func: VOID NAME '(' INT NAME . ')' code_block

    ')'  shift, and go to state 53


State 33

    7 func: VOID NAME '(' ')' code_block .

    $default  reduce using rule 7 (func)


State 34

    4 func: INT NAME '(' INT NAME ')' . code_block

    '{'  shift, and go to state 30

    code_block  go to state 54


State 35

   29 assign_stmt: NAME . '=' expr ';'
   30            | NAME . '=' call_func_stmt

    '='  shift, and go to state 55


State 36

   42 call_func_stmt: PRINT . '(' NAME ')' ';'

    '('  shift, and go to state 56


State 37

   43 call_func_stmt: READ . '(' ')' ';'

    '('  shift, and go to state 57


State 38

   44 return_stmt: RETURN . '(' expr ')' ';'
   45            | RETURN . expr ';'

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '('   shift, and go to state 60
    '-'   shift, and go to state 61

    expr  go to state 62
    term  go to state 63


State 39

   20 if_condition: IF . '(' bool_condition ')'

    '('  shift, and go to state 64


State 40

   22 while_block: WHILE . '(' bool_condition ')' stmt

    '('  shift, and go to state 65


State 41

   41 decl: INT . NAME ';'

    NAME  shift, and go to state 66


State 42

   17 stmt: code_block .

    $default  reduce using rule 17 (stmt)


State 43

    9 code_block: '{' stmts . '}'
   10 stmts: stmts . stmt

    NAME    shift, and go to state 35
    PRINT   shift, and go to state 36
    READ    shift, and go to state 37
    RETURN  shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    '{'     shift, and go to state 30
    '}'     shift, and go to state 67

    code_block       go to state 42
    stmt             go to state 68
    condition_block  go to state 45
    if_condition     go to state 46
    while_block      go to state 47
    assign_stmt      go to state 48
    call_func_stmt   go to state 51
    return_stmt      go to state 52


State 44

   11 stmts: stmt .

    $default  reduce using rule 11 (stmts)


State 45

   15 stmt: condition_block .

    $default  reduce using rule 15 (stmt)


State 46

   18 condition_block: if_condition . stmt
   19                | if_condition . stmt else_condition

    NAME    shift, and go to state 35
    PRINT   shift, and go to state 36
    READ    shift, and go to state 37
    RETURN  shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    '{'     shift, and go to state 30

    code_block       go to state 42
    stmt             go to state 69
    condition_block  go to state 45
    if_condition     go to state 46
    while_block      go to state 47
    assign_stmt      go to state 48
    call_func_stmt   go to state 51
    return_stmt      go to state 52


State 47

   16 stmt: while_block .

    $default  reduce using rule 16 (stmt)


State 48

   12 stmt: assign_stmt .

    $default  reduce using rule 12 (stmt)


State 49

    8 code_block: '{' var_decls . stmts '}'
   39 var_decls: var_decls . decl

    NAME    shift, and go to state 35
    PRINT   shift, and go to state 36
    READ    shift, and go to state 37
    RETURN  shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    INT     shift, and go to state 41
    '{'     shift, and go to state 30

    code_block       go to state 42
    stmts            go to state 70
    stmt             go to state 44
    condition_block  go to state 45
    if_condition     go to state 46
    while_block      go to state 47
    assign_stmt      go to state 48
    decl             go to state 71
    call_func_stmt   go to state 51
    return_stmt      go to state 52


State 50

   40 var_decls: decl .

    $default  reduce using rule 40 (var_decls)


State 51

   13 stmt: call_func_stmt .

    $default  reduce using rule 13 (stmt)


State 52

   14 stmt: return_stmt .

    $default  reduce using rule 14 (stmt)


State 53

    5 func: VOID NAME '(' INT NAME ')' . code_block

    '{'  shift, and go to state 30

    code_block  go to state 72


State 54

    4 func: INT NAME '(' INT NAME ')' code_block .

    $default  reduce using rule 4 (func)


State 55

   29 assign_stmt: NAME '=' . expr ';'
   30            | NAME '=' . call_func_stmt

    NUM    shift, and go to state 58
    NAME   shift, and go to state 59
    PRINT  shift, and go to state 36
    READ   shift, and go to state 37
    '-'    shift, and go to state 61

    expr            go to state 73
    term            go to state 63
    call_func_stmt  go to state 74


State 56

   42 call_func_stmt: PRINT '(' . NAME ')' ';'

    NAME  shift, and go to state 75


State 57

   43 call_func_stmt: READ '(' . ')' ';'

    ')'  shift, and go to state 76


State 58

   36 term: NUM .

    $default  reduce using rule 36 (term)


State 59

   37 term: NAME .

    $default  reduce using rule 37 (term)


State 60

   44 return_stmt: RETURN '(' . expr ')' ';'

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    expr  go to state 77
    term  go to state 63


State 61

   38 term: '-' . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 78


State 62

   45 return_stmt: RETURN expr . ';'

    ';'  shift, and go to state 79


State 63

   31 expr: term . '+' term
   32     | term . '-' term
   33     | term . '*' term
   34     | term . '/' term
   35     | term .

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 35 (expr)


State 64

   20 if_condition: IF '(' . bool_condition ')'

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    bool_condition  go to state 84
    term            go to state 85


State 65

   22 while_block: WHILE '(' . bool_condition ')' stmt

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    bool_condition  go to state 86
    term            go to state 85


State 66

   41 decl: INT NAME . ';'

    ';'  shift, and go to state 87


State 67

    9 code_block: '{' stmts '}' .

    $default  reduce using rule 9 (code_block)


State 68

   10 stmts: stmts stmt .

    $default  reduce using rule 10 (stmts)


State 69

   18 condition_block: if_condition stmt .
   19                | if_condition stmt . else_condition

    ELSE  shift, and go to state 88

    $default  reduce using rule 18 (condition_block)

    else_condition  go to state 89


State 70

    8 code_block: '{' var_decls stmts . '}'
   10 stmts: stmts . stmt

    NAME    shift, and go to state 35
    PRINT   shift, and go to state 36
    READ    shift, and go to state 37
    RETURN  shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    '{'     shift, and go to state 30
    '}'     shift, and go to state 90

    code_block       go to state 42
    stmt             go to state 68
    condition_block  go to state 45
    if_condition     go to state 46
    while_block      go to state 47
    assign_stmt      go to state 48
    call_func_stmt   go to state 51
    return_stmt      go to state 52


State 71

   39 var_decls: var_decls decl .

    $default  reduce using rule 39 (var_decls)


State 72

    5 func: VOID NAME '(' INT NAME ')' code_block .

    $default  reduce using rule 5 (func)


State 73

   29 assign_stmt: NAME '=' expr . ';'

    ';'  shift, and go to state 91


State 74

   30 assign_stmt: NAME '=' call_func_stmt .

    $default  reduce using rule 30 (assign_stmt)


State 75

   42 call_func_stmt: PRINT '(' NAME . ')' ';'

    ')'  shift, and go to state 92


State 76

   43 call_func_stmt: READ '(' ')' . ';'

    ';'  shift, and go to state 93


State 77

   44 return_stmt: RETURN '(' expr . ')' ';'

    ')'  shift, and go to state 94


State 78

   38 term: '-' term .

    $default  reduce using rule 38 (term)


State 79

   45 return_stmt: RETURN expr ';' .

    $default  reduce using rule 45 (return_stmt)


State 80

   31 expr: term '+' . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 95


State 81

   32 expr: term '-' . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 96


State 82

   33 expr: term '*' . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 97


State 83

   34 expr: term '/' . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 98


State 84

   20 if_condition: IF '(' bool_condition . ')'

    ')'  shift, and go to state 99


State 85

   23 bool_condition: term . '<' term
   24               | term . '>' term
   25               | term . LE term
   26               | term . GE term
   27               | term . EQ term
   28               | term . NEQ term

    LE   shift, and go to state 100
    GE   shift, and go to state 101
    EQ   shift, and go to state 102
    NEQ  shift, and go to state 103
    '<'  shift, and go to state 104
    '>'  shift, and go to state 105


State 86

   22 while_block: WHILE '(' bool_condition . ')' stmt

    ')'  shift, and go to state 106


State 87

   41 decl: INT NAME ';' .

    $default  reduce using rule 41 (decl)


State 88

   21 else_condition: ELSE . stmt

    NAME    shift, and go to state 35
    PRINT   shift, and go to state 36
    READ    shift, and go to state 37
    RETURN  shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    '{'     shift, and go to state 30

    code_block       go to state 42
    stmt             go to state 107
    condition_block  go to state 45
    if_condition     go to state 46
    while_block      go to state 47
    assign_stmt      go to state 48
    call_func_stmt   go to state 51
    return_stmt      go to state 52


State 89

   19 condition_block: if_condition stmt else_condition .

    $default  reduce using rule 19 (condition_block)


State 90

    8 code_block: '{' var_decls stmts '}' .

    $default  reduce using rule 8 (code_block)


State 91

   29 assign_stmt: NAME '=' expr ';' .

    $default  reduce using rule 29 (assign_stmt)


State 92

   42 call_func_stmt: PRINT '(' NAME ')' . ';'

    ';'  shift, and go to state 108


State 93

   43 call_func_stmt: READ '(' ')' ';' .

    $default  reduce using rule 43 (call_func_stmt)


State 94

   44 return_stmt: RETURN '(' expr ')' . ';'

    ';'  shift, and go to state 109


State 95

   31 expr: term '+' term .

    $default  reduce using rule 31 (expr)


State 96

   32 expr: term '-' term .

    $default  reduce using rule 32 (expr)


State 97

   33 expr: term '*' term .

    $default  reduce using rule 33 (expr)


State 98

   34 expr: term '/' term .

    $default  reduce using rule 34 (expr)


State 99

   20 if_condition: IF '(' bool_condition ')' .

    $default  reduce using rule 20 (if_condition)


State 100

   25 bool_condition: term LE . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 110


State 101

   26 bool_condition: term GE . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 111


State 102

   27 bool_condition: term EQ . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 112


State 103

   28 bool_condition: term NEQ . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 113


State 104

   23 bool_condition: term '<' . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 114


State 105

   24 bool_condition: term '>' . term

    NUM   shift, and go to state 58
    NAME  shift, and go to state 59
    '-'   shift, and go to state 61

    term  go to state 115


State 106

   22 while_block: WHILE '(' bool_condition ')' . stmt

    NAME    shift, and go to state 35
    PRINT   shift, and go to state 36
    READ    shift, and go to state 37
    RETURN  shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    '{'     shift, and go to state 30

    code_block       go to state 42
    stmt             go to state 116
    condition_block  go to state 45
    if_condition     go to state 46
    while_block      go to state 47
    assign_stmt      go to state 48
    call_func_stmt   go to state 51
    return_stmt      go to state 52


State 107

   21 else_condition: ELSE stmt .

    $default  reduce using rule 21 (else_condition)


State 108

   42 call_func_stmt: PRINT '(' NAME ')' ';' .

    $default  reduce using rule 42 (call_func_stmt)


State 109

   44 return_stmt: RETURN '(' expr ')' ';' .

    $default  reduce using rule 44 (return_stmt)


State 110

   25 bool_condition: term LE term .

    $default  reduce using rule 25 (bool_condition)


State 111

   26 bool_condition: term GE term .

    $default  reduce using rule 26 (bool_condition)


State 112

   27 bool_condition: term EQ term .

    $default  reduce using rule 27 (bool_condition)


State 113

   28 bool_condition: term NEQ term .

    $default  reduce using rule 28 (bool_condition)


State 114

   23 bool_condition: term '<' term .

    $default  reduce using rule 23 (bool_condition)


State 115

   24 bool_condition: term '>' term .

    $default  reduce using rule 24 (bool_condition)


State 116

   22 while_block: WHILE '(' bool_condition ')' stmt .

    $default  reduce using rule 22 (while_block)
