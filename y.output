Terminals unused in grammar

    NUM
    RETURN
    IF
    ELSE
    WHILE
    LE
    GE
    EQ
    NEQ


Grammar

    0 $accept: program $end

    1 program: print_line read_line func
    2        | read_line print_line func

    3 print_line: EXTERN VOID PRINT '(' INT ')' ';'

    4 read_line: EXTERN INT READ '(' ')' ';'

    5 func: INT NAME '(' INT NAME ')' '{' '}'
    6     | VOID NAME '(' INT NAME ')' '{' '}'
    7     | INT NAME '(' ')' '{' '}'
    8     | VOID NAME '(' ')' '{' '}'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 3 4 5 6 7 8
    ')' (41) 3 4 5 6 7 8
    ';' (59) 3 4
    '{' (123) 5 6 7 8
    '}' (125) 5 6 7 8
    error (256)
    NUM <ival> (258)
    NAME <sname> (259) 5 6 7 8
    PRINT (260) 3
    READ (261) 4
    RETURN (262)
    IF (263)
    ELSE (264)
    WHILE (265)
    INT (266) 3 4 5 6 7
    VOID (267) 3 6 8
    EXTERN (268) 3 4
    LE (269)
    GE (270)
    EQ (271)
    NEQ (272)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program <node_ptr> (24)
        on left: 1 2
        on right: 0
    print_line <node_ptr> (25)
        on left: 3
        on right: 1 2
    read_line <node_ptr> (26)
        on left: 4
        on right: 1 2
    func <node_ptr> (27)
        on left: 5 6 7 8
        on right: 1 2


State 0

    0 $accept: . program $end

    EXTERN  shift, and go to state 1

    program     go to state 2
    print_line  go to state 3
    read_line   go to state 4


State 1

    3 print_line: EXTERN . VOID PRINT '(' INT ')' ';'
    4 read_line: EXTERN . INT READ '(' ')' ';'

    INT   shift, and go to state 5
    VOID  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: print_line . read_line func

    EXTERN  shift, and go to state 8

    read_line  go to state 9


State 4

    2 program: read_line . print_line func

    EXTERN  shift, and go to state 10

    print_line  go to state 11


State 5

    4 read_line: EXTERN INT . READ '(' ')' ';'

    READ  shift, and go to state 12


State 6

    3 print_line: EXTERN VOID . PRINT '(' INT ')' ';'

    PRINT  shift, and go to state 13


State 7

    0 $accept: program $end .

    $default  accept


State 8

    4 read_line: EXTERN . INT READ '(' ')' ';'

    INT  shift, and go to state 5


State 9

    1 program: print_line read_line . func

    INT   shift, and go to state 14
    VOID  shift, and go to state 15

    func  go to state 16


State 10

    3 print_line: EXTERN . VOID PRINT '(' INT ')' ';'

    VOID  shift, and go to state 6


State 11

    2 program: read_line print_line . func

    INT   shift, and go to state 14
    VOID  shift, and go to state 15

    func  go to state 17


State 12

    4 read_line: EXTERN INT READ . '(' ')' ';'

    '('  shift, and go to state 18


State 13

    3 print_line: EXTERN VOID PRINT . '(' INT ')' ';'

    '('  shift, and go to state 19


State 14

    5 func: INT . NAME '(' INT NAME ')' '{' '}'
    7     | INT . NAME '(' ')' '{' '}'

    NAME  shift, and go to state 20


State 15

    6 func: VOID . NAME '(' INT NAME ')' '{' '}'
    8     | VOID . NAME '(' ')' '{' '}'

    NAME  shift, and go to state 21


State 16

    1 program: print_line read_line func .

    $default  reduce using rule 1 (program)


State 17

    2 program: read_line print_line func .

    $default  reduce using rule 2 (program)


State 18

    4 read_line: EXTERN INT READ '(' . ')' ';'

    ')'  shift, and go to state 22


State 19

    3 print_line: EXTERN VOID PRINT '(' . INT ')' ';'

    INT  shift, and go to state 23


State 20

    5 func: INT NAME . '(' INT NAME ')' '{' '}'
    7     | INT NAME . '(' ')' '{' '}'

    '('  shift, and go to state 24


State 21

    6 func: VOID NAME . '(' INT NAME ')' '{' '}'
    8     | VOID NAME . '(' ')' '{' '}'

    '('  shift, and go to state 25


State 22

    4 read_line: EXTERN INT READ '(' ')' . ';'

    ';'  shift, and go to state 26


State 23

    3 print_line: EXTERN VOID PRINT '(' INT . ')' ';'

    ')'  shift, and go to state 27


State 24

    5 func: INT NAME '(' . INT NAME ')' '{' '}'
    7     | INT NAME '(' . ')' '{' '}'

    INT  shift, and go to state 28
    ')'  shift, and go to state 29


State 25

    6 func: VOID NAME '(' . INT NAME ')' '{' '}'
    8     | VOID NAME '(' . ')' '{' '}'

    INT  shift, and go to state 30
    ')'  shift, and go to state 31


State 26

    4 read_line: EXTERN INT READ '(' ')' ';' .

    $default  reduce using rule 4 (read_line)


State 27

    3 print_line: EXTERN VOID PRINT '(' INT ')' . ';'

    ';'  shift, and go to state 32


State 28

    5 func: INT NAME '(' INT . NAME ')' '{' '}'

    NAME  shift, and go to state 33


State 29

    7 func: INT NAME '(' ')' . '{' '}'

    '{'  shift, and go to state 34


State 30

    6 func: VOID NAME '(' INT . NAME ')' '{' '}'

    NAME  shift, and go to state 35


State 31

    8 func: VOID NAME '(' ')' . '{' '}'

    '{'  shift, and go to state 36


State 32

    3 print_line: EXTERN VOID PRINT '(' INT ')' ';' .

    $default  reduce using rule 3 (print_line)


State 33

    5 func: INT NAME '(' INT NAME . ')' '{' '}'

    ')'  shift, and go to state 37


State 34

    7 func: INT NAME '(' ')' '{' . '}'

    '}'  shift, and go to state 38


State 35

    6 func: VOID NAME '(' INT NAME . ')' '{' '}'

    ')'  shift, and go to state 39


State 36

    8 func: VOID NAME '(' ')' '{' . '}'

    '}'  shift, and go to state 40


State 37

    5 func: INT NAME '(' INT NAME ')' . '{' '}'

    '{'  shift, and go to state 41


State 38

    7 func: INT NAME '(' ')' '{' '}' .

    $default  reduce using rule 7 (func)


State 39

    6 func: VOID NAME '(' INT NAME ')' . '{' '}'

    '{'  shift, and go to state 42


State 40

    8 func: VOID NAME '(' ')' '{' '}' .

    $default  reduce using rule 8 (func)


State 41

    5 func: INT NAME '(' INT NAME ')' '{' . '}'

    '}'  shift, and go to state 43


State 42

    6 func: VOID NAME '(' INT NAME ')' '{' . '}'

    '}'  shift, and go to state 44


State 43

    5 func: INT NAME '(' INT NAME ')' '{' '}' .

    $default  reduce using rule 5 (func)


State 44

    6 func: VOID NAME '(' INT NAME ')' '{' '}' .

    $default  reduce using rule 6 (func)
