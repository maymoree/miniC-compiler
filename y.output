State 39 conflicts: 6 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: print_line read_line func

    2 print_line: EXTERN VOID PRINT '(' INT ')' ';'

    3 read_line: EXTERN INT READ '(' ')' ';'

    4 func: INT NAME '(' INT NAME ')' code_block
    5     | VOID NAME '(' INT NAME ')' code_block
    6     | INT NAME '(' ')' code_block
    7     | VOID NAME '(' ')' code_block

    8 code_block: '{' var_decls stmts '}'
    9           | var_decls stmts
   10           | '{' stmts '}'
   11           | stmts

   12 stmts: stmts stmt
   13      | stmt

   14 stmt: assign_stmt
   15     | call_func_stmt
   16     | return_stmt
   17     | condition_block
   18     | while_block

   19 condition_block: if_condition code_block else_condition
   20                | if_condition code_block

   21 if_condition: IF '(' bool_condition ')'

   22 else_condition: ELSE code_block

   23 while_block: WHILE '(' bool_condition ')' code_block

   24 bool_condition: term '<' term
   25               | term '>' term
   26               | term LE term
   27               | term GE term
   28               | term EQ term
   29               | term NEQ term

   30 assign_stmt: NAME '=' expr ';'
   31            | NAME '=' call_func_stmt

   32 expr: term '+' term
   33     | term '-' term
   34     | term '*' term
   35     | term '/' term
   36     | term

   37 term: NUM
   38     | NAME
   39     | '-' term

   40 var_decls: var_decls decl
   41          | decl

   42 decl: INT NAME ';'

   43 call_func_stmt: PRINT '(' term ')' ';'
   44               | READ '(' ')' ';'

   45 return_stmt: RETURN '(' expr ')' ';'
   46            | RETURN expr ';'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 3 4 5 6 7 21 23 43 44 45
    ')' (41) 2 3 4 5 6 7 21 23 43 44 45
    '*' (42) 34
    '+' (43) 32
    '-' (45) 33 39
    '/' (47) 35
    ';' (59) 2 3 30 42 43 44 45 46
    '<' (60) 24
    '=' (61) 30 31
    '>' (62) 25
    '{' (123) 8 10
    '}' (125) 8 10
    error (256)
    NUM <ival> (258) 37
    NAME <idname> (259) 4 5 6 7 30 31 38 42
    PRINT (260) 2 43
    READ (261) 3 44
    RETURN (262) 45 46
    IF (263) 21
    ELSE (264) 22
    WHILE (265) 23
    INT (266) 2 3 4 5 6 42
    VOID (267) 2 5 7
    EXTERN (268) 2 3
    LE (269) 26
    GE (270) 27
    EQ (271) 28
    NEQ (272) 29


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program <nptr> (31)
        on left: 1
        on right: 0
    print_line <nptr> (32)
        on left: 2
        on right: 1
    read_line <nptr> (33)
        on left: 3
        on right: 1
    func <nptr> (34)
        on left: 4 5 6 7
        on right: 1
    code_block <nptr> (35)
        on left: 8 9 10 11
        on right: 4 5 6 7 19 20 22 23
    stmts <svec_ptr> (36)
        on left: 12 13
        on right: 8 9 10 11 12
    stmt <nptr> (37)
        on left: 14 15 16 17 18
        on right: 12 13
    condition_block <nptr> (38)
        on left: 19 20
        on right: 17
    if_condition <nptr> (39)
        on left: 21
        on right: 19 20
    else_condition <nptr> (40)
        on left: 22
        on right: 19
    while_block <nptr> (41)
        on left: 23
        on right: 18
    bool_condition <nptr> (42)
        on left: 24 25 26 27 28 29
        on right: 21 23
    assign_stmt <nptr> (43)
        on left: 30 31
        on right: 14
    expr <nptr> (44)
        on left: 32 33 34 35 36
        on right: 30 45 46
    term <nptr> (45)
        on left: 37 38 39
        on right: 24 25 26 27 28 29 32 33 34 35 36 39 43
    var_decls <svec_ptr> (46)
        on left: 40 41
        on right: 8 9 40
    decl <nptr> (47)
        on left: 42
        on right: 40 41
    call_func_stmt <nptr> (48)
        on left: 43 44
        on right: 15 31
    return_stmt <nptr> (49)
        on left: 45 46
        on right: 16


State 0

    0 $accept: . program $end

    EXTERN  shift, and go to state 1

    program     go to state 2
    print_line  go to state 3


State 1

    2 print_line: EXTERN . VOID PRINT '(' INT ')' ';'

    VOID  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: print_line . read_line func

    EXTERN  shift, and go to state 6

    read_line  go to state 7


State 4

    2 print_line: EXTERN VOID . PRINT '(' INT ')' ';'

    PRINT  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

    3 read_line: EXTERN . INT READ '(' ')' ';'

    INT  shift, and go to state 9


State 7

    1 program: print_line read_line . func

    INT   shift, and go to state 10
    VOID  shift, and go to state 11

    func  go to state 12


State 8

    2 print_line: EXTERN VOID PRINT . '(' INT ')' ';'

    '('  shift, and go to state 13


State 9

    3 read_line: EXTERN INT . READ '(' ')' ';'

    READ  shift, and go to state 14


State 10

    4 func: INT . NAME '(' INT NAME ')' code_block
    6     | INT . NAME '(' ')' code_block

    NAME  shift, and go to state 15


State 11

    5 func: VOID . NAME '(' INT NAME ')' code_block
    7     | VOID . NAME '(' ')' code_block

    NAME  shift, and go to state 16


State 12

    1 program: print_line read_line func .

    $default  reduce using rule 1 (program)


State 13

    2 print_line: EXTERN VOID PRINT '(' . INT ')' ';'

    INT  shift, and go to state 17


State 14

    3 read_line: EXTERN INT READ . '(' ')' ';'

    '('  shift, and go to state 18


State 15

    4 func: INT NAME . '(' INT NAME ')' code_block
    6     | INT NAME . '(' ')' code_block

    '('  shift, and go to state 19


State 16

    5 func: VOID NAME . '(' INT NAME ')' code_block
    7     | VOID NAME . '(' ')' code_block

    '('  shift, and go to state 20


State 17

    2 print_line: EXTERN VOID PRINT '(' INT . ')' ';'

    ')'  shift, and go to state 21


State 18

    3 read_line: EXTERN INT READ '(' . ')' ';'

    ')'  shift, and go to state 22


State 19

    4 func: INT NAME '(' . INT NAME ')' code_block
    6     | INT NAME '(' . ')' code_block

    INT  shift, and go to state 23
    ')'  shift, and go to state 24


State 20

    5 func: VOID NAME '(' . INT NAME ')' code_block
    7     | VOID NAME '(' . ')' code_block

    INT  shift, and go to state 25
    ')'  shift, and go to state 26


State 21

    2 print_line: EXTERN VOID PRINT '(' INT ')' . ';'

    ';'  shift, and go to state 27


State 22

    3 read_line: EXTERN INT READ '(' ')' . ';'

    ';'  shift, and go to state 28


State 23

    4 func: INT NAME '(' INT . NAME ')' code_block

    NAME  shift, and go to state 29


State 24

    6 func: INT NAME '(' ')' . code_block

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36
    '{'     shift, and go to state 37

    code_block       go to state 38
    stmts            go to state 39
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 45
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 25

    5 func: VOID NAME '(' INT . NAME ')' code_block

    NAME  shift, and go to state 49


State 26

    7 func: VOID NAME '(' ')' . code_block

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36
    '{'     shift, and go to state 37

    code_block       go to state 50
    stmts            go to state 39
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 45
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 27

    2 print_line: EXTERN VOID PRINT '(' INT ')' ';' .

    $default  reduce using rule 2 (print_line)


State 28

    3 read_line: EXTERN INT READ '(' ')' ';' .

    $default  reduce using rule 3 (read_line)


State 29

    4 func: INT NAME '(' INT NAME . ')' code_block

    ')'  shift, and go to state 51


State 30

   30 assign_stmt: NAME . '=' expr ';'
   31            | NAME . '=' call_func_stmt

    '='  shift, and go to state 52


State 31

   43 call_func_stmt: PRINT . '(' term ')' ';'

    '('  shift, and go to state 53


State 32

   44 call_func_stmt: READ . '(' ')' ';'

    '('  shift, and go to state 54


State 33

   45 return_stmt: RETURN . '(' expr ')' ';'
   46            | RETURN . expr ';'

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '('   shift, and go to state 57
    '-'   shift, and go to state 58

    expr  go to state 59
    term  go to state 60


State 34

   21 if_condition: IF . '(' bool_condition ')'

    '('  shift, and go to state 61


State 35

   23 while_block: WHILE . '(' bool_condition ')' code_block

    '('  shift, and go to state 62


State 36

   42 decl: INT . NAME ';'

    NAME  shift, and go to state 63


State 37

    8 code_block: '{' . var_decls stmts '}'
   10           | '{' . stmts '}'

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36

    stmts            go to state 64
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 65
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 38

    6 func: INT NAME '(' ')' code_block .

    $default  reduce using rule 6 (func)


State 39

   11 code_block: stmts .
   12 stmts: stmts . stmt

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35

    NAME      [reduce using rule 11 (code_block)]
    PRINT     [reduce using rule 11 (code_block)]
    READ      [reduce using rule 11 (code_block)]
    RETURN    [reduce using rule 11 (code_block)]
    IF        [reduce using rule 11 (code_block)]
    WHILE     [reduce using rule 11 (code_block)]
    $default  reduce using rule 11 (code_block)

    stmt             go to state 66
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 40

   13 stmts: stmt .

    $default  reduce using rule 13 (stmts)


State 41

   17 stmt: condition_block .

    $default  reduce using rule 17 (stmt)


State 42

   19 condition_block: if_condition . code_block else_condition
   20                | if_condition . code_block

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36
    '{'     shift, and go to state 37

    code_block       go to state 67
    stmts            go to state 39
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 45
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 43

   18 stmt: while_block .

    $default  reduce using rule 18 (stmt)


State 44

   14 stmt: assign_stmt .

    $default  reduce using rule 14 (stmt)


State 45

    9 code_block: var_decls . stmts
   40 var_decls: var_decls . decl

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36

    stmts            go to state 68
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    decl             go to state 69
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 46

   41 var_decls: decl .

    $default  reduce using rule 41 (var_decls)


State 47

   15 stmt: call_func_stmt .

    $default  reduce using rule 15 (stmt)


State 48

   16 stmt: return_stmt .

    $default  reduce using rule 16 (stmt)


State 49

    5 func: VOID NAME '(' INT NAME . ')' code_block

    ')'  shift, and go to state 70


State 50

    7 func: VOID NAME '(' ')' code_block .

    $default  reduce using rule 7 (func)


State 51

    4 func: INT NAME '(' INT NAME ')' . code_block

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36
    '{'     shift, and go to state 37

    code_block       go to state 71
    stmts            go to state 39
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 45
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 52

   30 assign_stmt: NAME '=' . expr ';'
   31            | NAME '=' . call_func_stmt

    NUM    shift, and go to state 55
    NAME   shift, and go to state 56
    PRINT  shift, and go to state 31
    READ   shift, and go to state 32
    '-'    shift, and go to state 58

    expr            go to state 72
    term            go to state 60
    call_func_stmt  go to state 73


State 53

   43 call_func_stmt: PRINT '(' . term ')' ';'

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 74


State 54

   44 call_func_stmt: READ '(' . ')' ';'

    ')'  shift, and go to state 75


State 55

   37 term: NUM .

    $default  reduce using rule 37 (term)


State 56

   38 term: NAME .

    $default  reduce using rule 38 (term)


State 57

   45 return_stmt: RETURN '(' . expr ')' ';'

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    expr  go to state 76
    term  go to state 60


State 58

   39 term: '-' . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 77


State 59

   46 return_stmt: RETURN expr . ';'

    ';'  shift, and go to state 78


State 60

   32 expr: term . '+' term
   33     | term . '-' term
   34     | term . '*' term
   35     | term . '/' term
   36     | term .

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 36 (expr)


State 61

   21 if_condition: IF '(' . bool_condition ')'

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    bool_condition  go to state 83
    term            go to state 84


State 62

   23 while_block: WHILE '(' . bool_condition ')' code_block

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    bool_condition  go to state 85
    term            go to state 84


State 63

   42 decl: INT NAME . ';'

    ';'  shift, and go to state 86


State 64

   10 code_block: '{' stmts . '}'
   12 stmts: stmts . stmt

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    '}'     shift, and go to state 87

    stmt             go to state 66
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 65

    8 code_block: '{' var_decls . stmts '}'
   40 var_decls: var_decls . decl

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36

    stmts            go to state 88
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    decl             go to state 69
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 66

   12 stmts: stmts stmt .

    $default  reduce using rule 12 (stmts)


State 67

   19 condition_block: if_condition code_block . else_condition
   20                | if_condition code_block .

    ELSE  shift, and go to state 89

    ELSE      [reduce using rule 20 (condition_block)]
    $default  reduce using rule 20 (condition_block)

    else_condition  go to state 90


State 68

    9 code_block: var_decls stmts .
   12 stmts: stmts . stmt

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35

    NAME      [reduce using rule 9 (code_block)]
    PRINT     [reduce using rule 9 (code_block)]
    READ      [reduce using rule 9 (code_block)]
    RETURN    [reduce using rule 9 (code_block)]
    IF        [reduce using rule 9 (code_block)]
    WHILE     [reduce using rule 9 (code_block)]
    $default  reduce using rule 9 (code_block)

    stmt             go to state 66
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 69

   40 var_decls: var_decls decl .

    $default  reduce using rule 40 (var_decls)


State 70

    5 func: VOID NAME '(' INT NAME ')' . code_block

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36
    '{'     shift, and go to state 37

    code_block       go to state 91
    stmts            go to state 39
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 45
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 71

    4 func: INT NAME '(' INT NAME ')' code_block .

    $default  reduce using rule 4 (func)


State 72

   30 assign_stmt: NAME '=' expr . ';'

    ';'  shift, and go to state 92


State 73

   31 assign_stmt: NAME '=' call_func_stmt .

    $default  reduce using rule 31 (assign_stmt)


State 74

   43 call_func_stmt: PRINT '(' term . ')' ';'

    ')'  shift, and go to state 93


State 75

   44 call_func_stmt: READ '(' ')' . ';'

    ';'  shift, and go to state 94


State 76

   45 return_stmt: RETURN '(' expr . ')' ';'

    ')'  shift, and go to state 95


State 77

   39 term: '-' term .

    $default  reduce using rule 39 (term)


State 78

   46 return_stmt: RETURN expr ';' .

    $default  reduce using rule 46 (return_stmt)


State 79

   32 expr: term '+' . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 96


State 80

   33 expr: term '-' . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 97


State 81

   34 expr: term '*' . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 98


State 82

   35 expr: term '/' . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 99


State 83

   21 if_condition: IF '(' bool_condition . ')'

    ')'  shift, and go to state 100


State 84

   24 bool_condition: term . '<' term
   25               | term . '>' term
   26               | term . LE term
   27               | term . GE term
   28               | term . EQ term
   29               | term . NEQ term

    LE   shift, and go to state 101
    GE   shift, and go to state 102
    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    '<'  shift, and go to state 105
    '>'  shift, and go to state 106


State 85

   23 while_block: WHILE '(' bool_condition . ')' code_block

    ')'  shift, and go to state 107


State 86

   42 decl: INT NAME ';' .

    $default  reduce using rule 42 (decl)


State 87

   10 code_block: '{' stmts '}' .

    $default  reduce using rule 10 (code_block)


State 88

    8 code_block: '{' var_decls stmts . '}'
   12 stmts: stmts . stmt

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    '}'     shift, and go to state 108

    stmt             go to state 66
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 89

   22 else_condition: ELSE . code_block

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36
    '{'     shift, and go to state 37

    code_block       go to state 109
    stmts            go to state 39
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 45
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 90

   19 condition_block: if_condition code_block else_condition .

    $default  reduce using rule 19 (condition_block)


State 91

    5 func: VOID NAME '(' INT NAME ')' code_block .

    $default  reduce using rule 5 (func)


State 92

   30 assign_stmt: NAME '=' expr ';' .

    $default  reduce using rule 30 (assign_stmt)


State 93

   43 call_func_stmt: PRINT '(' term ')' . ';'

    ';'  shift, and go to state 110


State 94

   44 call_func_stmt: READ '(' ')' ';' .

    $default  reduce using rule 44 (call_func_stmt)


State 95

   45 return_stmt: RETURN '(' expr ')' . ';'

    ';'  shift, and go to state 111


State 96

   32 expr: term '+' term .

    $default  reduce using rule 32 (expr)


State 97

   33 expr: term '-' term .

    $default  reduce using rule 33 (expr)


State 98

   34 expr: term '*' term .

    $default  reduce using rule 34 (expr)


State 99

   35 expr: term '/' term .

    $default  reduce using rule 35 (expr)


State 100

   21 if_condition: IF '(' bool_condition ')' .

    $default  reduce using rule 21 (if_condition)


State 101

   26 bool_condition: term LE . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 112


State 102

   27 bool_condition: term GE . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 113


State 103

   28 bool_condition: term EQ . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 114


State 104

   29 bool_condition: term NEQ . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 115


State 105

   24 bool_condition: term '<' . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 116


State 106

   25 bool_condition: term '>' . term

    NUM   shift, and go to state 55
    NAME  shift, and go to state 56
    '-'   shift, and go to state 58

    term  go to state 117


State 107

   23 while_block: WHILE '(' bool_condition ')' . code_block

    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    RETURN  shift, and go to state 33
    IF      shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 36
    '{'     shift, and go to state 37

    code_block       go to state 118
    stmts            go to state 39
    stmt             go to state 40
    condition_block  go to state 41
    if_condition     go to state 42
    while_block      go to state 43
    assign_stmt      go to state 44
    var_decls        go to state 45
    decl             go to state 46
    call_func_stmt   go to state 47
    return_stmt      go to state 48


State 108

    8 code_block: '{' var_decls stmts '}' .

    $default  reduce using rule 8 (code_block)


State 109

   22 else_condition: ELSE code_block .

    $default  reduce using rule 22 (else_condition)


State 110

   43 call_func_stmt: PRINT '(' term ')' ';' .

    $default  reduce using rule 43 (call_func_stmt)


State 111

   45 return_stmt: RETURN '(' expr ')' ';' .

    $default  reduce using rule 45 (return_stmt)


State 112

   26 bool_condition: term LE term .

    $default  reduce using rule 26 (bool_condition)


State 113

   27 bool_condition: term GE term .

    $default  reduce using rule 27 (bool_condition)


State 114

   28 bool_condition: term EQ term .

    $default  reduce using rule 28 (bool_condition)


State 115

   29 bool_condition: term NEQ term .

    $default  reduce using rule 29 (bool_condition)


State 116

   24 bool_condition: term '<' term .

    $default  reduce using rule 24 (bool_condition)


State 117

   25 bool_condition: term '>' term .

    $default  reduce using rule 25 (bool_condition)


State 118

   23 while_block: WHILE '(' bool_condition ')' code_block .

    $default  reduce using rule 23 (while_block)
